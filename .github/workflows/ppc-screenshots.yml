name: PPC UI Screenshots

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - 'apps/ppc-backend/**'
      - '.github/workflows/ppc-screenshots.yml'

jobs:
  screenshots:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GH_PAT != '' && secrets.GH_PAT || github.token }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PPC backend deps
        if: ${{ hashFiles('apps/ppc-backend/**') != '' }}
        working-directory: apps/ppc-backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start PPC backend
        if: ${{ hashFiles('apps/ppc-backend/**') != '' }}
        working-directory: apps/ppc-backend
        env:
          APP_BASIC_AUTH_USER: admin
          APP_BASIC_AUTH_PASS: change-me
        run: |
          nohup python -m uvicorn main:app --host 0.0.0.0 --port 8000 > backend.log 2>&1 &
          echo "Backend started"

      - name: Wait for backend
        if: ${{ hashFiles('apps/ppc-backend/**') != '' }}
        run: |
          for i in {1..30}; do
            if curl -sf "http://localhost:8000/healthz" >/dev/null; then echo OK && exit 0; fi
            sleep 1
          done
          echo "Backend did not start" && tail -n 200 apps/ppc-backend/backend.log && exit 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install web deps
        working-directory: apps/web
        run: |
          npm ci || npm install

      - name: Build web app
        working-directory: apps/web
        env:
          NEXT_TELEMETRY_DISABLED: 1
          PPC_BACKEND_URL: http://localhost:8000
          PPC_BACKEND_BASIC_USER: admin
          PPC_BACKEND_BASIC_PASS: change-me
        run: |
          set -o pipefail
          npm run build 2>&1 | tee web-build.log

      - name: Start web app
        working-directory: apps/web
        env:
          NODE_ENV: production
          PORT: 3000
          PPC_BACKEND_URL: http://localhost:8000
          PPC_BACKEND_BASIC_USER: admin
          PPC_BACKEND_BASIC_PASS: change-me
        run: |
          nohup npx next start -p 3000 > web.log 2>&1 &
          echo "Web started"

      - name: Wait for web
        run: |
          for i in {1..60}; do
            if curl -sf "http://localhost:3000" >/dev/null; then echo OK && exit 0; fi
            sleep 1
          done
          echo "Web did not start" && tail -n 200 apps/web/web.log && exit 1

      - name: Install Playwright chromium (no-save)
        working-directory: apps/web
        run: |
          npm i --no-save playwright
          npx playwright install --with-deps chromium

      - name: Capture screenshots
        working-directory: apps/web
        env:
          SITE_URL: http://localhost:3000
        run: npm run screenshot:ppc

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ppc-screenshots
          path: apps/web/docs/ppc-screens/*.png
          if-no-files-found: warn

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ppc-logs
          path: |
            apps/ppc-backend/backend.log
            apps/web/web.log
            apps/web/web-build.log
          if-no-files-found: ignore
